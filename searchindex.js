Search.setIndex({"alltitles": {"Developer Documentation": [[2, "developer-documentation"]], "Example Unit Test": [[2, "example-unit-test"]], "File Storage and IO": [[0, "module-mockfs.storage"]], "History": [[1, null]], "Indices and tables": [[2, "indices-and-tables"]], "Utility Functions": [[0, "module-mockfs.util"]], "mockfs \u2013 A simple mock filesystem for unit tests": [[2, null]], "os.path and glob Implementations": [[0, null]], "v0.6.0": [[1, "v0-6-0"]], "v0.8.0": [[1, "v0-8-0"]], "v0.9.0": [[1, "v0-9-0"]], "v1.0.0": [[1, "v1-0-0"]], "v1.0.1": [[1, "v1-0-1"]], "v1.0.2": [[1, "v1-0-2"]], "v1.1.0": [[1, "v1-1-0"]], "v1.1.1": [[1, "v1-1-1"]], "v1.1.2": [[1, "v1-1-2"]], "v1.1.3": [[1, "v1-1-3"]], "v2.0.0": [[1, "v2-0-0"]]}, "docnames": ["api", "history", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["api.rst", "history.rst", "index.rst"], "indexentries": {"abspath() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.abspath", false]], "abspath() (mockfs.mockfs method)": [[2, "mockfs.MockFS.abspath", false]], "add_entries() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.add_entries", false]], "add_entries() (mockfs.mockfs method)": [[2, "mockfs.MockFS.add_entries", false]], "backend (class in mockfs.storage)": [[0, "mockfs.storage.backend", false]], "build_nested_dict() (in module mockfs.util)": [[0, "mockfs.util.build_nested_dict", false]], "build_nested_dir_dict() (in module mockfs.util)": [[0, "mockfs.util.build_nested_dir_dict", false]], "chdir() (mockfs.mfs.cwd method)": [[0, "mockfs.mfs.Cwd.chdir", false]], "checkforfile() (mockfs.mfs.storagebackend method)": [[0, "mockfs.mfs.StorageBackend.CheckForFile", false]], "checkforfile() (mockfs.storage.backend static method)": [[0, "mockfs.storage.backend.CheckForFile", false]], "close() (mockfs.storage.file method)": [[0, "mockfs.storage.file.close", false]], "closed (mockfs.storage.file property)": [[0, "mockfs.storage.file.closed", false]], "copytree() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.copytree", false]], "copytree() (mockfs.mockfs method)": [[2, "mockfs.MockFS.copytree", false]], "cwd (class in mockfs.mfs)": [[0, "mockfs.mfs.Cwd", false]], "deletefile() (mockfs.mfs.storagebackend method)": [[0, "mockfs.mfs.StorageBackend.DeleteFile", false]], "deletefile() (mockfs.storage.backend static method)": [[0, "mockfs.storage.backend.DeleteFile", false]], "encoding (mockfs.storage.file property)": [[0, "mockfs.storage.file.encoding", false]], "errors (mockfs.storage.file property)": [[0, "mockfs.storage.file.errors", false]], "exists() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.exists", false]], "exists() (mockfs.mockfs method)": [[2, "mockfs.MockFS.exists", false]], "file (class in mockfs.storage)": [[0, "mockfs.storage.file", false]], "fileno() (mockfs.storage.file method)": [[0, "mockfs.storage.file.fileno", false]], "flush() (mockfs.storage.file method)": [[0, "mockfs.storage.file.flush", false]], "get_new_fileno() (in module mockfs.storage)": [[0, "mockfs.storage.get_new_fileno", false]], "getcwd() (mockfs.mfs.cwd method)": [[0, "mockfs.mfs.Cwd.getcwd", false]], "getcwdu() (mockfs.mfs.cwd method)": [[0, "mockfs.mfs.Cwd.getcwdu", false]], "getsize() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.getsize", false]], "getsize() (mockfs.mockfs method)": [[2, "mockfs.MockFS.getsize", false]], "glob() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.glob", false]], "glob() (mockfs.mockfs method)": [[2, "mockfs.MockFS.glob", false]], "is_dir() (in module mockfs.util)": [[0, "mockfs.util.is_dir", false]], "is_file() (in module mockfs.util)": [[0, "mockfs.util.is_file", false]], "is_string() (in module mockfs.util)": [[0, "mockfs.util.is_string", false]], "isatty() (mockfs.storage.file method)": [[0, "mockfs.storage.file.isatty", false]], "isdir() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.isdir", false]], "isdir() (mockfs.mockfs method)": [[2, "mockfs.MockFS.isdir", false]], "isfile() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.isfile", false]], "isfile() (mockfs.mockfs method)": [[2, "mockfs.MockFS.isfile", false]], "islink() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.islink", false]], "islink() (mockfs.mockfs method)": [[2, "mockfs.MockFS.islink", false]], "listdir() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.listdir", false]], "listdir() (mockfs.mockfs method)": [[2, "mockfs.MockFS.listdir", false]], "loadfile() (mockfs.mfs.storagebackend method)": [[0, "mockfs.mfs.StorageBackend.LoadFile", false]], "loadfile() (mockfs.storage.backend static method)": [[0, "mockfs.storage.backend.LoadFile", false]], "makedirs() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.makedirs", false]], "makedirs() (mockfs.mockfs method)": [[2, "mockfs.MockFS.makedirs", false]], "merge_dicts() (in module mockfs.util)": [[0, "mockfs.util.merge_dicts", false]], "mockfs": [[2, "module-mockfs", false]], "mockfs (class in mockfs)": [[2, "mockfs.MockFS", false]], "mockfs (class in mockfs.mfs)": [[0, "mockfs.mfs.MockFS", false]], "mockfs.mfs": [[0, "module-mockfs.mfs", false]], "mockfs.storage": [[0, "module-mockfs.storage", false]], "mockfs.util": [[0, "module-mockfs.util", false]], "mode (mockfs.storage.file property)": [[0, "mockfs.storage.file.mode", false]], "module": [[0, "module-mockfs.mfs", false], [0, "module-mockfs.storage", false], [0, "module-mockfs.util", false], [2, "module-mockfs", false]], "name (mockfs.storage.file property)": [[0, "mockfs.storage.file.name", false]], "newlines (mockfs.storage.file property)": [[0, "mockfs.storage.file.newlines", false]], "next() (mockfs.storage.file method)": [[0, "mockfs.storage.file.next", false]], "open() (in module mockfs.storage)": [[0, "mockfs.storage.open", false]], "read() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.read", false]], "read() (mockfs.mockfs method)": [[2, "mockfs.MockFS.read", false]], "read() (mockfs.storage.file method)": [[0, "mockfs.storage.file.read", false]], "readline() (mockfs.storage.file method)": [[0, "mockfs.storage.file.readline", false]], "readlines() (mockfs.storage.file method)": [[0, "mockfs.storage.file.readlines", false]], "remove() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.remove", false]], "remove() (mockfs.mockfs method)": [[2, "mockfs.MockFS.remove", false]], "replace_builtins() (in module mockfs)": [[2, "mockfs.replace_builtins", false]], "replace_builtins() (in module mockfs.mfs)": [[0, "mockfs.mfs.replace_builtins", false]], "replace_builtins() (in module mockfs.storage)": [[0, "mockfs.storage.replace_builtins", false]], "restore_builtins() (in module mockfs)": [[2, "mockfs.restore_builtins", false]], "restore_builtins() (in module mockfs.mfs)": [[0, "mockfs.mfs.restore_builtins", false]], "restore_builtins() (in module mockfs.storage)": [[0, "mockfs.storage.restore_builtins", false]], "rmdir() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.rmdir", false]], "rmdir() (mockfs.mockfs method)": [[2, "mockfs.MockFS.rmdir", false]], "rmtree() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.rmtree", false]], "rmtree() (mockfs.mockfs method)": [[2, "mockfs.MockFS.rmtree", false]], "sanitize() (in module mockfs.util)": [[0, "mockfs.util.sanitize", false]], "savefile() (mockfs.mfs.storagebackend method)": [[0, "mockfs.mfs.StorageBackend.SaveFile", false]], "savefile() (mockfs.storage.backend static method)": [[0, "mockfs.storage.backend.SaveFile", false]], "seek() (mockfs.storage.file method)": [[0, "mockfs.storage.file.seek", false]], "softspace (mockfs.storage.file property)": [[0, "mockfs.storage.file.softspace", false]], "storagebackend (class in mockfs.mfs)": [[0, "mockfs.mfs.StorageBackend", false]], "tell() (mockfs.storage.file method)": [[0, "mockfs.storage.file.tell", false]], "truncate() (mockfs.storage.file method)": [[0, "mockfs.storage.file.truncate", false]], "walk() (mockfs.mfs.mockfs method)": [[0, "mockfs.mfs.MockFS.walk", false]], "walk() (mockfs.mockfs method)": [[2, "mockfs.MockFS.walk", false]], "write() (mockfs.storage.file method)": [[0, "mockfs.storage.file.write", false]], "writelines() (mockfs.storage.file method)": [[0, "mockfs.storage.file.writelines", false]], "xreadlines() (mockfs.storage.file method)": [[0, "mockfs.storage.file.xreadlines", false]]}, "objects": {"": [[2, 0, 0, "-", "mockfs"]], "mockfs": [[2, 1, 1, "", "MockFS"], [0, 0, 0, "-", "mfs"], [2, 3, 1, "", "replace_builtins"], [2, 3, 1, "", "restore_builtins"], [0, 0, 0, "-", "storage"], [0, 0, 0, "-", "util"]], "mockfs.MockFS": [[2, 2, 1, "", "abspath"], [2, 2, 1, "", "add_entries"], [2, 2, 1, "", "copytree"], [2, 2, 1, "", "exists"], [2, 2, 1, "", "getsize"], [2, 2, 1, "", "glob"], [2, 2, 1, "", "isdir"], [2, 2, 1, "", "isfile"], [2, 2, 1, "", "islink"], [2, 2, 1, "", "listdir"], [2, 2, 1, "", "makedirs"], [2, 2, 1, "", "read"], [2, 2, 1, "", "remove"], [2, 2, 1, "", "rmdir"], [2, 2, 1, "", "rmtree"], [2, 2, 1, "", "walk"]], "mockfs.mfs": [[0, 1, 1, "", "Cwd"], [0, 1, 1, "", "MockFS"], [0, 1, 1, "", "StorageBackend"], [0, 3, 1, "", "replace_builtins"], [0, 3, 1, "", "restore_builtins"]], "mockfs.mfs.Cwd": [[0, 2, 1, "", "chdir"], [0, 2, 1, "", "getcwd"], [0, 2, 1, "", "getcwdu"]], "mockfs.mfs.MockFS": [[0, 2, 1, "", "abspath"], [0, 2, 1, "", "add_entries"], [0, 2, 1, "", "copytree"], [0, 2, 1, "", "exists"], [0, 2, 1, "", "getsize"], [0, 2, 1, "", "glob"], [0, 2, 1, "", "isdir"], [0, 2, 1, "", "isfile"], [0, 2, 1, "", "islink"], [0, 2, 1, "", "listdir"], [0, 2, 1, "", "makedirs"], [0, 2, 1, "", "read"], [0, 2, 1, "", "remove"], [0, 2, 1, "", "rmdir"], [0, 2, 1, "", "rmtree"], [0, 2, 1, "", "walk"]], "mockfs.mfs.StorageBackend": [[0, 2, 1, "", "CheckForFile"], [0, 2, 1, "", "DeleteFile"], [0, 2, 1, "", "LoadFile"], [0, 2, 1, "", "SaveFile"]], "mockfs.storage": [[0, 1, 1, "", "backend"], [0, 1, 1, "", "file"], [0, 3, 1, "", "get_new_fileno"], [0, 3, 1, "", "open"], [0, 3, 1, "", "replace_builtins"], [0, 3, 1, "", "restore_builtins"]], "mockfs.storage.backend": [[0, 2, 1, "", "CheckForFile"], [0, 2, 1, "", "DeleteFile"], [0, 2, 1, "", "LoadFile"], [0, 2, 1, "", "SaveFile"]], "mockfs.storage.file": [[0, 2, 1, "", "close"], [0, 4, 1, "", "closed"], [0, 4, 1, "", "encoding"], [0, 4, 1, "", "errors"], [0, 2, 1, "", "fileno"], [0, 2, 1, "", "flush"], [0, 2, 1, "", "isatty"], [0, 4, 1, "", "mode"], [0, 4, 1, "", "name"], [0, 4, 1, "", "newlines"], [0, 2, 1, "", "next"], [0, 2, 1, "", "read"], [0, 2, 1, "", "readline"], [0, 2, 1, "", "readlines"], [0, 2, 1, "", "seek"], [0, 4, 1, "", "softspace"], [0, 2, 1, "", "tell"], [0, 2, 1, "", "truncate"], [0, 2, 1, "", "write"], [0, 2, 1, "", "writelines"], [0, 2, 1, "", "xreadlines"]], "mockfs.util": [[0, 3, 1, "", "build_nested_dict"], [0, 3, 1, "", "build_nested_dir_dict"], [0, 3, 1, "", "is_dir"], [0, 3, 1, "", "is_file"], [0, 3, 1, "", "is_string"], [0, 3, 1, "", "merge_dicts"], [0, 3, 1, "", "sanitize"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "terms": {"": 1, "0": [0, 2], "05": 1, "07": 1, "08": 1, "09": 1, "1": [0, 2], "16": 1, "19": 1, "2": [0, 2], "20": 1, "2010": 1, "2012": 1, "2013": 1, "2015": 1, "2020": 1, "2021": 1, "2023": 1, "2024": 1, "21": 1, "23": 1, "24": 1, "3": 2, "517": 1, "518": 1, "6": 2, "8": 2, "9": 2, "A": 0, "If": [0, 2], "The": [0, 1, 2], "_": 1, "abspath": [0, 1, 2], "ad": 0, "add": [0, 1, 2], "add_entri": [0, 2], "adopt": 1, "all": 0, "allow": 0, "alreadi": [0, 2], "although": 0, "alwai": 0, "an": [0, 1, 2], "ani": 0, "api": 1, "append": 0, "approxim": 0, "apr": 1, "ar": [0, 1, 2], "argument": [0, 2], "assert": [0, 2], "assertequ": 2, "attribut": 0, "b": 0, "back": 2, "backend": [0, 2], "backward": 0, "base": 2, "been": 1, "befor": 0, "behavior": 0, "beyond": 0, "bin": [0, 2], "binari": 0, "black": 1, "block": 0, "bound": 0, "buffer": 0, "build": [0, 1], "build_nested_dict": [0, 2], "build_nested_dir_dict": [0, 2], "builtin": [0, 2], "byte": [0, 1], "call": [0, 2], "can": [0, 1, 2], "cannot": 0, "caus": [0, 2], "cerci": 1, "chdir": [0, 1, 2], "check": 0, "checkforfil": [0, 2], "ci": 1, "class": [0, 2], "clean": 0, "close": [0, 1, 2], "code": [1, 2], "codec": 1, "com": 1, "compat": [0, 1], "connect": 0, "content": [0, 2], "context": [0, 1, 2], "convent": 0, "convert": 0, "copi": [0, 2], "copytre": [0, 2], "count": 0, "creat": [0, 2], "current": [0, 2], "cwd": [0, 2], "data": [0, 2], "def": 2, "default": 0, "delet": [0, 2], "deletefil": [0, 2], "depend": 2, "descriptor": 0, "destin": 0, "devic": 0, "dict": 0, "dictionari": [0, 2], "dir": 0, "directori": [0, 1, 2], "dirpath": 0, "disk": 0, "distutil": 1, "doe": [1, 2], "doesn": 0, "dst": [0, 2], "due": 0, "e": 0, "each": 0, "eg": 1, "empti": 0, "encod": [0, 2], "end": [0, 2], "enhanc": 1, "ensur": 1, "entri": [0, 2], "eof": 0, "equival": 0, "error": [0, 2], "even": 0, "everyth": 2, "exampl": 0, "exampletestcas": 2, "exc_info": [0, 2], "except": [0, 1, 2], "exist": [0, 1, 2], "exit": 0, "f": [0, 2], "fail": [0, 2], "fals": [0, 2], "feb": 1, "fh": 2, "file": [1, 2], "filenam": 0, "fileno": [0, 2], "filesystem": 0, "final": 1, "flag": 0, "flat": 0, "flush": [0, 2], "foord": 1, "format": 1, "from": [0, 1, 2], "fspath": [0, 2], "func": [0, 2], "function": 2, "further": 0, "futur": 1, "g": 0, "get_new_fileno": [0, 2], "getcwd": [0, 1, 2], "getcwdu": [0, 1, 2], "getsiz": [0, 1, 2], "github": 1, "given": 0, "glob": [1, 2], "ha": 1, "handl": [0, 1, 2], "handler": 0, "happi": 0, "hard": [0, 2], "histori": 2, "http": 1, "i": [0, 1, 2], "ignor": [0, 2], "ignore_error": [0, 2], "implement": [1, 2], "import": [0, 2], "improv": 1, "includ": 0, "incomplet": 0, "index": 2, "indic": 0, "initi": 1, "instal": [0, 1, 2], "instanc": [0, 2], "integ": 0, "integr": 1, "interfac": [0, 2], "intern": 0, "io": [1, 2], "ioerror": 1, "is_dir": [0, 2], "is_fil": [0, 2], "is_str": [0, 2], "isatti": [0, 2], "isdir": [0, 2], "isfil": [0, 2], "islink": [0, 2], "isn": 0, "iter": 0, "jan": 1, "jaraco": 1, "jul": 1, "kind": 0, "l": [0, 2], "legal": 0, "less": 0, "level": 0, "limit": 0, "line": 0, "list": 0, "listdir": [0, 1, 2], "loadfil": [0, 2], "long": 0, "lower": 0, "magic": 2, "mai": 0, "make": 2, "makedir": [0, 1, 2], "manag": [1, 2], "mani": 0, "map": [0, 2], "mar": 1, "maximum": 0, "merg": 0, "merge_dict": [0, 2], "mf": [0, 2], "michael": 1, "mock": 0, "mockf": [0, 1], "mode": [0, 2], "modern": 1, "modul": [0, 1, 2], "more": [0, 1], "most": 0, "move": 0, "name": [0, 2], "need": 0, "neg": 0, "nest": 0, "never": 1, "new": [0, 1, 2], "newli": [0, 2], "newlin": [0, 2], "next": [0, 2], "non": [0, 1], "none": [0, 2], "normal": 2, "note": 0, "notic": 0, "nov": 1, "now": [0, 1, 2], "number": 0, "o": [1, 2], "object": [0, 2], "oct": 1, "offset": 0, "omit": 0, "onc": 0, "one": 0, "onerror": [0, 2], "onli": [0, 1], "open": [0, 1, 2], "oper": 0, "optim": 0, "option": 0, "origin": [0, 2], "oserror": [0, 1, 2], "other": 0, "otherwis": [0, 2], "our": 1, "packag": 1, "page": 2, "param": [0, 2], "paramet": [0, 2], "patch": 1, "path": [1, 2], "pattern": [0, 2], "pep": 1, "perform": 0, "perhap": 0, "platform": 0, "popen": 0, "posit": 0, "possibl": 2, "prefer": 0, "previous": 0, "print": 0, "produc": 0, "project": 1, "properli": 1, "properti": 0, "provid": [0, 2], "py": 1, "pytest": 1, "python": 1, "python3": 1, "r": [0, 2], "rais": [0, 1, 2], "reach": 0, "read": [0, 2], "readlin": [0, 2], "recurs": [0, 2], "reflect": 0, "rel": [0, 1], "releas": 1, "remov": [0, 1, 2], "reorgan": 1, "repeatedli": 0, "replac": [0, 1, 2], "replace_builtin": [0, 1, 2], "report": [0, 2], "request": 0, "restor": [0, 1, 2], "restore_builtin": [0, 2], "retain": 0, "return": [0, 2], "revert": 1, "rmdir": [0, 1, 2], "rmtree": [0, 1, 2], "ru": 1, "sanit": [0, 2], "save": 1, "savefil": [0, 2], "scope": 2, "search": 2, "seek": [0, 2], "seekabl": 0, "self": [0, 2], "sequenc": 0, "set": [0, 2], "setup": [1, 2], "setuptool": 1, "sh": [0, 2], "should": 0, "shutil": [0, 1, 2], "simpl": 0, "simul": 0, "simultan": 0, "sinc": 0, "size": [0, 2], "skeleton": 1, "skip": 1, "slash": 0, "so": 0, "softspac": [0, 2], "some": 0, "sourc": [0, 1], "space": 0, "src": [0, 2], "start": 0, "stat": [0, 2], "static": 0, "statu": 0, "stopiter": 0, "storag": [1, 2], "storagebackend": [0, 2], "str": 0, "string": 0, "stub": [0, 2], "subtre": [0, 2], "support": [1, 2], "switch": 1, "sy": [0, 2], "symlink": [0, 2], "system": [0, 1], "t": 0, "teardown": [1, 2], "tell": [0, 2], "test": [0, 1], "test_context_manag": 2, "test_using_open": 2, "test_using_os_path": 2, "testcas": 2, "text": 0, "than": 0, "thi": 0, "thrown": 1, "tmp": 2, "total": 0, "tox": 1, "trail": 0, "travi": 1, "tree": [0, 1, 2], "true": [0, 2], "truncat": [0, 2], "try": 1, "tty": 0, "tupl": [0, 2], "type": 0, "uinistal": 1, "undefin": 0, "unicod": 0, "uninstal": 1, "unit": 0, "unittest": 2, "unix": 0, "unlink": [1, 2], "until": 0, "up": 0, "upon": 0, "us": [0, 1, 2], "usr": 2, "usual": 0, "utf": 2, "util": 2, "v0": 2, "v1": 2, "v2": 2, "valu": 0, "w": 0, "wa": 0, "wai": 0, "walk": [0, 2], "well": 1, "were": 1, "what": 0, "when": [0, 1], "whenc": 0, "where": [0, 2], "while": 1, "wire": [0, 2], "without": 0, "write": [0, 1, 2], "writelin": [0, 2], "written": 0, "wtih": 1, "xreadlin": [0, 2]}, "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">os.path</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">glob</span></code> Implementations", "History", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mockfs</span></code> \u2013 A simple mock filesystem for unit tests"], "titleterms": {"0": 1, "1": 1, "2": 1, "3": 1, "6": 1, "8": 1, "9": 1, "A": 2, "develop": 2, "document": 2, "exampl": 2, "file": 0, "filesystem": 2, "function": 0, "glob": 0, "histori": 1, "implement": 0, "indic": 2, "io": 0, "mock": 2, "mockf": 2, "o": 0, "path": 0, "simpl": 2, "storag": 0, "tabl": 2, "test": 2, "unit": 2, "util": 0, "v0": 1, "v1": 1, "v2": 1}})